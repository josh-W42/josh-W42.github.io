{"version":3,"sources":["components/About/index.js","components/Home/index.js","components/Projects/projectsData.js","components/partials/ProjectModal/index.js","components/Projects/index.js","components/partials/SideNav/index.js","components/partials/TopNav/index.js","components/Contact/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","card","background","color","margin","height","width","breakpoints","up","titles","fontWeight","link","paragraph","fontSize","media","borderRadius","softSkills","csSkills","webDevSkills","About","props","classes","id","className","Card","elevation","CardContent","Grid","container","justify","alignItems","direction","item","xs","md","Image","alt","src","Typography","component","to","target","rel","Button","variant","alignContent","List","dense","map","skill","index","ListItem","button","names","text","Home","useState","displayNames","typing","setTyping","getNames","name","Backspace","count","length","delay","rounded","onTypingDone","prev","Delay","ms","setTimeout","projectsData","title","short_description","long_description","skills","topSkills","isInProgress","date","Date","githubUrl","deployedUrl","imageUrl","styles","root","padding","spacing","closeButton","position","right","top","palette","grey","content","actions","chipList","display","justifyContent","flexWrap","listStyle","dialog","chip","borderColor","ProjectModal","open","setOpen","handleClose","skillArray","project","Chip","label","onClick","Dialog","onClose","aria-labelledby","IconButton","aria-label","gutterBottom","Paper","Link","href","minHeight","grid","projectImg","opacity","Projects","projects","setProjects","sortKey","useEffect","sortProjects","key","sort","a","b","valueOf","includes","console","log","projectArray","toDateString","split","formattedDate","Zoom","in","style","transitionDelay","CardMedia","image","CardActions","SideNav","Nav","defaultActiveKey","role","TopNav","expanded","setExpanded","toggleExpanded","Navbar","expand","Brand","Toggle","aria-controls","Collapse","textShadow","avatar","Contact","Avatar","size","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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gBACA,aACA,aACA,eACA,4BACA,OACA,UACA,cAEFC,UAAW,CACT,aACA,UACA,iBAEFC,cAAc,EACdC,KAAM,IAAIC,KAAK,KAAM,EAAG,IACxBC,UAAW,oCACXC,YAAa,oCACbC,SACE,uFAEJ,CACEV,MAAO,QACPC,kBAAmB,yCACnBC,iBACE,iUACFC,OAAQ,CACN,UACA,+BACA,cACA,UACA,WACA,aACA,cACA,gBACA,OACA,UACA,aACA,iCACA,cAEFC,UAAW,CACT,aACA,aACA,kCAEFC,cAAc,EACdC,KAAM,IAAIC,KAAK,KAAM,EAAG,IACxBC,UAAW,6CACXC,YAAa,qCACbC,SACE,yFAEJ,CACEV,MAAO,YACPC,kBAAmB,oCACnBC,iBACE,sLACFC,OAAQ,CACN,WACA,aACA,OACA,aACA,cACA,aAEFC,UAAW,CACT,YACA,WACA,QAEFC,cAAc,EACdC,KAAM,IAAIC,KAAK,KAAM,EAAG,IACxBC,UAAW,uDACXC,YAAa,uDACbC,SACE,oFAEJ,CACEV,MAAO,cACPC,kBAAmB,8CACnBC,iBACE,4DACFC,OAAQ,CACN,eACA,aACA,aACA,SACA,eACA,mBACA,8BACA,aAEFC,UAAW,CACT,YACA,eACA,+BAEFC,cAAc,EACdC,KAAM,IAAIC,KAAK,KAAM,EAAG,IACxBC,UAAW,8DACXC,YAAa,8DACbC,SACE,uFAEJ,CACEV,MAAO,gBACPC,kBAAmB,+BACnBC,iBACE,2IACFC,OAAQ,CACN,aACA,aACA,SACA,eACA,mBACA,aAEFC,UAAW,CACT,YACA,aACA,cAEFC,cAAc,EACdG,UAAW,0CACXC,YAAa,0CACbH,KAAM,IAAIC,KAAK,KAAM,EAAG,IACxBG,SACE,kFAEJ,CACEV,MAAO,YACPC,kBAAmB,gCACnBC,iBACE,ySACFC,OAAQ,CACN,cACA,UACA,+BACA,cACA,UACA,gBACA,WACA,aACA,UACA,aACA,YACA,cAEFC,UAAW,CACT,aACA,YACA,cAEFC,cAAc,EACdC,KAAM,IAAIC,KAAK,KAAM,EAAG,IACxBC,UAAW,iDACXC,YAAa,sCACbC,SACE,uG,8DCxLAC,EAASr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","file":"static/js/main.9a84c7e6.chunk.js","sourcesContent":["import Image from 'react-bootstrap/Image';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    background: \"transparent\",\n    color: \"#E5E5E5\",\n    margin: \"0 auto\",\n    height: \"fit-content\",\n    width: \"100%\",\n    [theme.breakpoints.up('sm')]: {\n      width: \"75%\",\n    },\n  },\n  titles: {\n    fontWeight: \"bold\",\n  },\n  link: {\n    color: \"inherit\",\n  },\n  paragraph: {\n    fontSize: \"1.25rem\",\n  },\n  media: {\n    width: \"100%\",\n    borderRadius: \"50%\",\n  },\n}));\n\nconst softSkills = [\n  \"Perseverance\",\n  \"Leadership\",\n  \"Teamwork\",\n  \"Creativity\",\n  \"Problem Solving\",\n  \"Empathy\",\n];\n\nconst csSkills = [\n  \"Python\",\n  \"Data Structures\",\n  \"Algorithms\",\n  \"Object Oriented Programming\",\n  \"Object Relational Mappers (ORMs)\",\n  \"Object Document Mappers (ODMs)\",\n];\n\nconst webDevSkills = [\n  \"HTML5 / CSS3\",\n  \"JavaScript\",\n  \"Bootstrap.js\",\n  \"Material-UI\",\n  \"React.js\",\n  \"Node.js\",\n  \"Express.js\",\n  \"Django\",\n  \"MongoDB\",\n  \"PostgreSQL\",\n];\n\nconst About = (props) => {\n\n  const classes = useStyles();\n\n  const webDevArray = () => {\n    return webDevSkills.map((skill, index) => {\n      return (\n        <ListItem button key={`webSkill-${index}`}>\n          {skill}\n        </ListItem>\n      );\n    });\n  }\n\n  const csSkillArray = () => {\n    return csSkills.map((skill, index) => {\n      return (\n        <ListItem button key={`csSkill-${index}`}>\n          {skill}\n        </ListItem>\n      );\n    });\n  }\n\n  const softSkillArray = () => {\n    return softSkills.map((skill, index) => {\n      return (\n        <ListItem button key={`softSkill-${index}`}>\n          {skill}\n        </ListItem>\n      );\n    });\n  }\n\n  return (\n    <div\n      id=\"AboutContainer\"\n      className=\"bg-transparent position-absolute start-50 translate-middle\"\n    >\n      <Card className={classes.card} elevation={3}>\n        <CardContent className=\"text-center\">\n          <Grid container justify=\"center\" alignItems=\"center\" direction=\"row\">\n            <Grid item xs={4} md={2}>\n              <Image\n                className={classes.media}\n                alt=\"Joshua Wilson picture\"\n                src=\"https://res.cloudinary.com/dom5vocai/image/upload/v1615799074/j9n1larb3urczqoas1rr.jpg\"\n              />\n            </Grid>\n            <Grid item xs md={6}>\n              <Typography className={classes.titles} component=\"h1\">\n                Joshua Wilson\n              </Typography>\n              <Typography className={classes.titles} component=\"h2\">\n                Full Stack Web Developer\n              </Typography>\n              <br />\n              <Link className={classes.link} to=\"/assets/img/Design_Resume.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button variant=\"outlined\" color=\"inherit\"><GetAppIcon/> Resume</Button>\n              </Link>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardContent>\n          <hr></hr>\n          <Typography className={classes.titles} variant=\"h5\" component=\"h3\">\n            About Me:\n          </Typography>\n          <br />\n          <Typography\n            className={classes.paragraph}\n            variant=\"body2\"\n            component=\"p\"\n          >\n            I’m a full stack web developer who enjoys turning complex problems\n            into efficient solutions using javascript and python. After spending\n            three years in customer service and several years studying\n            Linguistics in college, I’ve developed my skills around conducting\n            detailed oriented research and adapting to many situations. I’m most\n            excited about turning abstract ideas into tangible products and\n            creating experiences that positively impact users.\n          </Typography>\n          <br />\n          <hr></hr>\n          <Typography className={classes.titles} variant=\"h5\" component=\"h3\">\n            Technical Skills:\n          </Typography>\n          <br />\n          <Grid container justify=\"space-evenly\" alignItems=\"flex-start\" alignContent=\"space-around\">\n            <Grid item xs>\n              <Typography className={classes.titles} variant=\"h5\" component=\"h4\">\n                Web Development:\n              </Typography>\n              <List dense>\n                {webDevArray()}\n              </List>\n            </Grid>\n            <Grid item xs>\n              <Typography className={classes.titles} variant=\"h5\" component=\"h4\">\n                Computer Science:\n              </Typography>\n              <List dense>\n                {csSkillArray()}\n              </List>\n            </Grid>\n            <Grid item xs>\n              <Typography className={classes.titles} variant=\"h5\" component=\"h4\">\n                Soft Skills:\n              </Typography>\n              <List dense>\n                {softSkillArray()}\n              </List>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default About","import Image from 'react-bootstrap/Image';\nimport { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Typist from 'react-typist';\nimport { makeStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\n\nconst names = [\n  \"Full Stack Web Developer\",\n  \"Space Enthusiast\",\n  \"General Assembly Bootcamp Grad\",\n  \"Long Distance Runner\",\n  \"Former UCLA Bruin\",\n  \"Passionate Gamer\",\n  \"Life Long Learner\",\n  \"Traveler\",\n];\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    fontSize: '1.25rem',\n    color: '#E5E5E5',\n    fontWeight: \"bold\",\n    [theme.breakpoints.up('sm')]: {\n      fontSize: \"2rem\",\n    },\n  },\n}));\n\nconst Home = () => {\n\n  const [displayNames, setDisplayNames] = useState(names);\n  const [typing, setTyping] = useState(false);\n\n  const classes = useStyles();\n\n  const getNames = displayNames.map((name, index) => {\n    return (\n      <div key={`${name}-${index}`}>\n        <span>{name}</span>\n        <Typist.Backspace count={name.length} delay={2000} />\n      </div>\n    );\n  });\n\n  const reset = () => {\n    setTyping((prev) => !prev);\n    setTimeout(() => {\n      setTyping((prev) => !prev);\n    }, 300);\n  }\n\n  return (\n    <div id=\"HomeContainer\" className=\"bg-transparent text-center position-absolute top-50 start-50 translate-middle\">\n      <Grid container justify=\"space-evenly\" direction=\"column\">\n        <Grid item>\n          <Image src=\"https://res.cloudinary.com/dom5vocai/image/upload/v1615930252/new_logo_bwgzbl.png\" rounded />\n        </Grid>\n        <Grid item>\n          <Typist onTypingDone={() => setTyping((prev) => !prev)}>\n            <Typist.Delay ms={100} />\n            <Typography className={classes.text} variant=\"h3\" component=\"h1\">\n              Hi, my name is Joshua Wilson\n            </Typography>\n            <Typist.Delay ms={500} />\n            <br />\n            <Typography className={classes.text} variant=\"h4\" component=\"span\">\n              I'm a...\n            </Typography>\n          </Typist>\n          { \n            typing ? (\n              <Typist onTypingDone={reset}>\n                <Typography className={classes.text} variant=\"h4\" component=\"span\">\n                  {getNames}\n                </Typography>\n              </Typist>\n            ):(<></>)\n          }\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Home","const projectsData = [\n  {\n    title: \"Minesweeper\",\n    short_description: \"A clone of the classic game, minesweeper.\",\n    long_description:\n      \"A browser based clone of minesweeper. Players can choose between 4 levels of difficulty and customize game settings.\",\n    skills: [\n      \"HTML5 Canvas\",\n      \"Object Oriented Programming\",\n      \"Game Development\",\n      \"HTML / CSS\",\n      \"JavaScript\",\n      \"Front-End\",\n    ],\n    topSkills: [\n      \"Front-End\",\n      \"HTML5 Canvas\",\n      \"Object Oriented Programming\",\n    ],\n    isInProgress: false,\n    date: new Date(2021, 0, 20),\n    githubUrl: \"https://github.com/josh-W42/minesweeper\",\n    deployedUrl: \"https://josh-w42.github.io/minesweeper/\",\n    imageUrl:\n      \"https://res.cloudinary.com/dom5vocai/image/upload/v1618349995/explosion_urchi5.png\",\n  },\n  {\n    title: \"Crane\",\n    short_description: \"A full stack social media application.\",\n    long_description:\n      \"Crane is a full stack social media application. Users can create posts and flocks (groups) and then comment on posts. My inspiration for making this project was facebook and reddit\",\n    skills: [\n      \"Express\",\n      \"Object Relational Mapper (ORM)\",\n      \"Sequelize.js\",\n      \"SQL\",\n      \"PostgreSQL\",\n      \"Authorization\",\n      \"HTML / CSS\",\n      \"JavaScript\",\n      \"Bootstrap.js\",\n      \"Embedded JavaScript (EJS)\",\n      \"APIs\",\n      \"Node.js\",\n      \"Full-Stack\",\n    ],\n    topSkills: [\n      \"Full-Stack\",\n      \"Express\",\n      \"Authorization\",\n    ],\n    isInProgress: false,\n    date: new Date(2021, 1, 18),\n    githubUrl: \"https://github.com/josh-W42/crane\",\n    deployedUrl: \"https://crane-jw42.herokuapp.com/\",\n    imageUrl:\n      \"https://res.cloudinary.com/dom5vocai/image/upload/v1613426540/crane_logo_xzo7cm.png\",\n  },\n  {\n    title: \"Munch\",\n    short_description: \"A full stack food delivery application\",\n    long_description:\n      \"Munch is a full stack web app designed to mimic the likes of Uber Eats and Postmates. I worked on this project alongside my General Assembly classmates, Nelson Valerio and Andrew Bith. Some examples of features I worked on were the feed page, account settings page, and the use of a Trie for search bar autocompletion.\",\n    skills: [\n      \"Express\",\n      \"Object Document Mapper (ODM)\",\n      \"Mongoose.js\",\n      \"MongoDB\",\n      \"React.js\",\n      \"JavaScript\",\n      \"Material-UI\",\n      \"Authorization\",\n      \"APIs\",\n      \"Node.js\",\n      \"MERN Stack\",\n      \"Data Structures and Algorithms\",\n      \"Full-Stack\",\n    ],\n    topSkills: [\n      \"Full-Stack\",\n      \"MERN Stack\",\n      \"Data Structures and Algorithms\",\n    ],\n    isInProgress: false,\n    date: new Date(2021, 2, 15),\n    githubUrl: \"https://github.com/josh-W42/munch-frontend\",\n    deployedUrl: \"https://munch-react.herokuapp.com/\",\n    imageUrl:\n      \"https://res.cloudinary.com/dom5vocai/image/upload/v1615689944/possibleLogo_nbghky.svg\",\n  },\n  {\n    title: \"React Map\",\n    short_description: \"A google maps local map in react.\",\n    long_description:\n      \"This react map utilizes the google maps places and javascript api to display a map of the user's current location. Users can search and filter local venues and places of interest.\",\n    skills: [\n      \"React.js\",\n      \"JavaScript\",\n      \"APIs\",\n      \"HTML / CSS\",\n      \"Google Maps\",\n      \"Front-End\",\n    ],\n    topSkills: [\n      \"Front-End\",\n      \"React.js\",\n      \"APIs\",\n    ],\n    isInProgress: false,\n    date: new Date(2018, 7, 15),\n    githubUrl: \"https://github.com/josh-W42/Neighborhood-Map-Project\",\n    deployedUrl: \"https://josh-w42.github.io/Neighborhood-Map-Project/\",\n    imageUrl:\n      \"https://res.cloudinary.com/dom5vocai/image/upload/v1618354089/map-min_cgscdw.jpg\",\n  },\n  {\n    title: \"Arcade Game\",\n    short_description: \"A 2D browser based game similar to Frogger.\",\n    long_description:\n      \"This game was designed to mimic the classic Frogger game.\",\n    skills: [\n      \"HTML5 Canvas\",\n      \"HTML / CSS\",\n      \"JavaScript\",\n      \"jQuery\",\n      \"Bootstrap.js\",\n      \"Game Development\",\n      \"Object Oriented Programming\",\n      \"Front-End\",\n    ],\n    topSkills: [\n      \"Front-End\",\n      \"HTML5 Canvas\",\n      \"Object Oriented Programming\",\n    ],\n    isInProgress: false,\n    date: new Date(2018, 5, 23),\n    githubUrl: \"https://github.com/josh-W42/frontend-nanodegree-arcade-game\",\n    deployedUrl: \"https://josh-w42.github.io/frontend-nanodegree-arcade-game/\",\n    imageUrl:\n      \"https://res.cloudinary.com/dom5vocai/image/upload/v1618356387/arcade-min_qsxtn6.jpg\",\n  },\n  {\n    title: \"Concentration\",\n    short_description: \"A browser based memory game.\",\n    long_description:\n      \"This is small memory game designed after a game by the same. Players flip cards to find pairs as fast as they can to get a better score.\",\n    skills: [\n      \"HTML / CSS\",\n      \"JavaScript\",\n      \"jQuery\",\n      \"Bootstrap.js\",\n      \"Game Development\",\n      \"Front-End\",\n    ],\n    topSkills: [\n      \"Front-End\",\n      \"HTML / CSS\",\n      \"JavaScript\",\n    ],\n    isInProgress: false,\n    githubUrl: \"https://github.com/josh-W42/Memory-Game\",\n    deployedUrl: \"https://josh-w42.github.io/Memory-Game/\",\n    date: new Date(2018, 4, 31),\n    imageUrl:\n      \"https://res.cloudinary.com/dom5vocai/image/upload/v1618355192/brain_cvaw7j.jpg\",\n  },\n  {\n    title: \"TaskShare\",\n    short_description: \"A real-time productivity app.\",\n    long_description:\n      \"TaskShare is a full stack team  communication and productivity application. It allows members to communicate in real time using the socket.io javascript library. Inspired by productivity apps like Slack and GroupMe. Still in development, however a demo that enables real-time chat is available.\",\n    skills: [\n      \"Material-UI\",\n      \"Express\",\n      \"Object Document Mapper (ODM)\",\n      \"Mongoose.js\",\n      \"MongoDB\",\n      \"Authorization\",\n      \"React.js\",\n      \"JavaScript\",\n      \"Node.js\",\n      \"MERN Stack\",\n      \"Socket.io\",\n      \"Full-Stack\",\n    ],\n    topSkills: [\n      \"Full-Stack\",\n      \"Socket.io\",\n      \"MERN Stack\",\n    ],\n    isInProgress: true,\n    date: new Date(2021, 3, 10),\n    githubUrl: \"https://github.com/josh-W42/taskshare-frontend\",\n    deployedUrl: \"https://taskshare-42.herokuapp.com/\",\n    imageUrl:\n      \"https://res.cloudinary.com/dom5vocai/image/upload/v1618357269/stil-vdaJJbls3xE-unsplash_q00wl5.jpg\",\n  },\n];\n\nexport default projectsData;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\n\n\nconst styles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  content: {\n    padding: theme.spacing(2),\n    background: \"#212121\",\n    color: \"#E5E5E5\",\n  },\n  actions: {\n    margin: 0,\n    padding: theme.spacing(1),\n    background: \"#212121\",\n    color: \"#E5E5E5\",\n  },\n  chipList: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0,\n    background: \"#212121\",\n    color: \"#E5E5E5\",\n  },\n  dialog: {\n    background: \"#212121\",\n    color: \"#E5E5E5\",\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n    color: \"#E5E5E5\",\n    borderColor: \"#B7B7B7\",\n  },\n}));\n\nconst ProjectModal = (props) => {\n  const [open, setOpen] = useState(false);\n\n  const classes = styles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const skillArray = props.project.skills.map((skill) => {\n    return (\n      <li key={`skill-${skill}-for-${props.project.title}`}>\n        <Chip label={skill} className={classes.chip} variant=\"outlined\" />\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"m-auto\">\n      <Button variant=\"outlined\" color=\"inherit\" onClick={handleClickOpen}>\n        More Details\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <div className={classes.dialog} id=\"customized-dialog-title\">\n          <Typography className={classes.root} variant=\"h6\">{props.project.title} - {props.date}</Typography>\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n        <div className={classes.content}>\n          <Typography gutterBottom>\n            {props.project.long_description}\n          </Typography>\n          <Typography variant=\"h6\">\n            Skills Used:\n          </Typography>\n          <Paper className={classes.chipList} elevation={4} component=\"ul\">\n            {skillArray}\n          </Paper>\n        </div>\n        <div className={classes.actions}>\n          <Link href={props.project.githubUrl} target=\"_blank\" rel=\"noopener noreferrer\" color=\"inherit\">\n            <Button color=\"inherit\">\n              Link to Github Repo\n            </Button>\n          </Link>\n          <Link href={props.project.deployedUrl} target=\"_blank\" rel=\"noopener noreferrer\" color=\"inherit\">\n            <Button color=\"inherit\">\n              Link to Deployed App\n            </Button>\n          </Link>\n        </div>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default ProjectModal;","import { useEffect, useState } from \"react\";\nimport projectsData from \"./projectsData\";\nimport ProjectModal from \"../partials/ProjectModal\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    margin: \"auto\",\n    color: \"#E5E5E5\",\n    [theme.breakpoints.up('sm')]: {\n      width: \"80%\",\n    },\n  },\n  card: {\n    width: \"100%\",\n    background: \"rgba(53, 58, 64, 0.7)\",\n    color: \"#E5E5E5\",\n    minHeight: 550,\n    margin: 10,\n  },\n  grid: {\n    margin: \"1px\",\n  },\n  title: {\n    fontWeight: 'bold',\n  },\n  projectImg: {\n    opacity: 0.8,\n    width: \"100%\",\n    height: 200,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n    color: \"#E5E5E5\",\n    borderColor: \"#B7B7B7\",\n  },\n  chipList: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0,\n    background: \"inherit\",\n    color: \"#E5E5E5\",\n  },\n}));\n\n\nconst Projects = (props) => {\n  const [projects, setProjects] = useState([]);\n  const [sortKey, setSortKey] = useState('date');\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    sortProjects(sortKey);\n  }, [sortKey]);\n\n  const sortProjects = (key) => {\n    switch (key) {\n      case 'date':\n        setProjects((projects) => {\n          return projectsData.sort((a, b) => b.date.valueOf() - a.date.valueOf());\n        });\n        break;\n      case 'front-end':\n        setProjects((projects) => {\n          return projectsData.sort((a, b) => b.skills.includes('Front-End') - a.skills.includes('Front-End'));\n        });\n        break;\n      case 'full-stack':\n        setProjects((projects) => {\n          return projectsData.sort((a, b) => b.skills.includes('Full-Stack') - a.skills.includes('Full-Stack'));\n        });\n        break;\n      default:\n        console.log('No sort');\n        setProjects(projectsData);\n        break;\n    }\n  }\n\n  const projectArray = projects.map((project, index) => {\n    const formattedDate = () => {\n      let date = project.date.toDateString();\n      date = date.split(\" \");\n      return `${date[1]} ${date[3]}`;\n    }\n\n    const date = formattedDate();\n\n    const skillArray = project.topSkills.map((skill) => {\n      return (\n        <li key={`top-skill-${skill}-for-${project.title}`}>\n          <Chip label={skill} className={classes.chip} variant=\"outlined\" />\n        </li>\n      );\n    });\n\n    return (\n      <Grid item xs={10} md={3} className={classes.grid} key={`project-${project.title}`}>\n        <Zoom in={true} style={{ transitionDelay: `${100 * index}ms` }}>\n          <Card className={classes.card} elevation={3}>\n            <CardMedia\n              className={classes.projectImg}\n              image={project.imageUrl}\n              title={project.title}\n            />\n            <CardContent>\n              <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">\n                {project.title}\n              </Typography>\n              <Typography variant=\"subtitle1\" component=\"p\" >\n                {date}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                {project.short_description}\n              </Typography>\n              { project.isInProgress ? (\n                <Typography variant=\"body2\" component=\"p\">\n                  * A Work In Progress *\n                </Typography>\n              ) : (\n                <></>\n              )}\n              <hr></hr>\n              <Typography variant=\"h6\" component=\"p\">\n                Top Skills:\n              </Typography>\n              <Paper className={classes.chipList} elevation={0} component=\"ul\">\n                {skillArray}\n              </Paper>\n            </CardContent>\n            <CardActions>\n              <ProjectModal date={date} project={project} />\n            </CardActions>\n          </Card>\n        </Zoom>\n      </Grid>\n    );\n  });\n\n\n  return ( \n    <div id=\"ProjectsContainer\" className={classes.root}>\n      {/* <Grid container justify=\"space-evenly\">\n        <Grid item>\n          <Button size=\"small\" variant=\"outlined\" onClick={() => } color=\"inherit\">Sort By Date</Button>\n        </Grid>\n        <Grid item>\n          <Button size=\"small\" variant=\"outlined\" color=\"inherit\">Full Stack First</Button>\n        </Grid>\n        <Grid item>\n          <Button size=\"small\" variant=\"outlined\" color=\"inherit\">Front-End First</Button>\n        </Grid>\n      </Grid> */}\n      <br />\n      <Grid container justify=\"center\">\n        {projectArray}\n      </Grid>\n    </div>\n  )\n}\n\nexport default Projects;","import Nav from 'react-bootstrap/Nav';\nimport { Link } from 'react-router-dom';\n\nconst SideNav = (props) => {\n  return (\n    <nav id=\"sideNav\" className=\"container position-fixed rounded\">\n      <Nav defaultActiveKey=\"/\" variant=\"pills\" className=\"flex-column\">\n        <Link to=\"/\" className=\"nav-link\" role=\"button\">\n          <i className=\"fas fa-home\"></i><span className=\"ms-2\">Home</span>\n        </Link>\n        <Link to=\"/about\" className=\"nav-link\" role=\"button\">\n          <i className=\"fas fa-user-alt\"></i><span className=\"ms-2\">About</span>\n        </Link>\n        <Link to=\"/projects\" className=\"nav-link\" role=\"button\">\n          <i className=\"fas fa-code\"></i><span className=\"ms-2\">Projects</span>\n        </Link>\n        <Link to=\"/contact\" className=\"nav-link\" role=\"button\">\n          <i className=\"fas fa-address-book\"></i><span className=\"ms-2\">Contact</span>\n        </Link>\n      </Nav>\n    </nav>\n  );\n}\n\nexport default SideNav;","import { Link } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Image from 'react-bootstrap/Image';\nimport { useState } from 'react';\n\nconst TopNav = (props) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev);\n  }\n\n  return (\n    <Navbar id=\"topNav\" className=\"navbar-dark bg-dark\" expand=\"lg\" expanded={expanded}>\n      <Link to=\"/\" className=\"nav-link\" role=\"button\">\n        <Navbar.Brand className=\"ms-2 text-reset\">\n          <Image src=\"https://res.cloudinary.com/dom5vocai/image/upload/v1615930252/new_logo_bwgzbl.png\" width=\"50px\" height=\"50px\" rounded />\n          Joshua Wilson\n        </Navbar.Brand>\n      </Link>\n      <Navbar.Toggle onClick={toggleExpanded} aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Link to=\"/\" className=\"nav-link\" onClick={toggleExpanded} role=\"button\">\n            <i className=\"fas fa-home\"></i><span className=\"ms-2\">Home</span>\n          </Link>\n          <Link to=\"/about\" className=\"nav-link\" onClick={toggleExpanded} role=\"button\">\n            <i className=\"fas fa-user-alt\"></i><span className=\"ms-2\">About</span>\n          </Link>\n          <Link to=\"/projects\" className=\"nav-link\" onClick={toggleExpanded} role=\"button\">\n            <i className=\"fas fa-code\"></i><span className=\"ms-2\">Projects</span>\n          </Link>\n          <Link to=\"/contact\" className=\"nav-link\" onClick={toggleExpanded} role=\"button\">\n            <i className=\"fas fa-address-book\"></i><span className=\"ms-2\">Contact</span>\n          </Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nexport default TopNav;\n","import { Grid, makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    fontSize: '1.25rem',\n    color: '#E5E5E5',\n    fontWeight: \"bold\",\n    textShadow: \"1px 1px white\",\n    [theme.breakpoints.up('sm')]: {\n      fontSize: \"2rem\",\n    },\n  },\n  card: {\n    width: \"100%\",\n    background: \"transparent\",\n    color: \"#E5E5E5\",\n  },\n  link: {\n    color: \"inherit\",\n  },\n  avatar: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n  },\n}));\n\nconst Contact = (props) => {\n  \n  const classes = useStyles();\n\n  return (\n    <div\n      id=\"ContactContainer\"\n      className=\"bg-transparent text-center position-absolute top-50 start-50 translate-middle\"\n    >\n      <Card className={classes.card} elevation={3}>\n        <Grid container justify=\"space-evenly\">\n          <Grid item>\n            <Avatar\n              aria-label=\"Joshua Wilson\"\n              src=\"https://res.cloudinary.com/dom5vocai/image/upload/v1615799074/j9n1larb3urczqoas1rr.jpg\"\n              className={classes.avatar}\n            />\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h5\" component=\"h1\">\n              Joshua Wilson\n            </Typography>\n            <Typography variant=\"h6\" component=\"h2\">\n              Los Angeles, CA\n            </Typography>\n            <Typography variant=\"h6\" component=\"h2\">\n              <EmailIcon /><span className=\"ms-1\">wilson.jd022@gmail.com</span>\n            </Typography>\n          </Grid>\n        </Grid>\n        <hr></hr>\n        <br />\n        <CardActions>\n          <Grid\n            container\n            justify=\"space-evenly\"\n            alignContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Link className={classes.link} href=\"mailto: wilson.jd022@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button color=\"inherit\" size=\"large\">\n                  <EmailIcon className=\"ms-1\" />\n                  <span className=\"ms-1\">Send An Email</span>\n                </Button>\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link className={classes.link} href=\"https://github.com/josh-W42\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button color=\"inherit\" size=\"large\">\n                  <GitHubIcon className=\"ms-1\" />{\" \"}\n                  <span className=\"ms-1\">Github</span>\n                </Button>\n              </Link>              \n            </Grid>\n            <Grid item>\n              <Link className={classes.link} href=\"https://www.linkedin.com/in/jwilson42/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button color=\"inherit\" size=\"large\">\n                  <LinkedInIcon className=\"ms-1\" />{\" \"}\n                  <span className=\"m-1\">LinkedIn</span>\n                </Button>\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link className={classes.link} href=\"/assets/img/Design_Resume.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button color=\"inherit\" size=\"large\">\n                  <GetAppIcon className=\"ms-1\" />{\" \"}\n                  <span className=\"ms-1\">Resume</span>\n                </Button>\n              </Link>\n            </Grid>\n          </Grid>\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n\nexport default Contact;","import { Route, Switch } from 'react-router';\nimport './App.css';\nimport About from './components/About';\nimport Home from './components/Home';\nimport Projects from './components/Projects';\nimport SideNav from './components/partials/SideNav';\nimport TopNav from './components/partials/TopNav';\nimport Contact from './components/Contact';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div id=\"particles-js\"></div>\n      <TopNav />\n      <SideNav />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/projects\" component={Projects} />\n        <Route path=\"/contact\" component={Contact} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}